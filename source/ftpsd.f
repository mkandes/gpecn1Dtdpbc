! ======================================================================
! NAME
!
!     FTPSD
!
! DESCRIPTION
!
!     FTPSD is a supporting program of GPECN1DTDPBC that uses the 
!     Fourier-Transform Phase Shift Determination algorithm* to compute 
!     the phase shift observed in the probability densities generated by
!     interferometry-relatedsimulations.
!
!     * Goldberg, K. A. and Bokor, J., "Fourier-Transform Method of 
!       Phase-Shift Determination", Applied Optics, 40 (17): 2886-2894 
!       (2001).
!
! AUTHOR
!
!     Marty Kandes, Ph.D.
!     Distributed High-Throughput Computing Group
!     San Diego Supercomputer Center
!     University of California, San Diego
!
! COPYRIGHT
!     
!     Copyright (c) 2010, 2011, 2017 Martin Charles Kandes
!
! LICENSE
!
!     The MIT License (MIT)
!
! LAST UPDATED
!
!     Friday, March 31st, 2017                                   
!
! ----------------------------------------------------------------------
      PROGRAM FTPSD
      IMPLICIT NONE

!     Parameter Declarations:
!     -----------------------
      REAL, PARAMETER :: PI = 3.1415926535897932384626433832795028841971E0

!     Input Variable and Array Declarations:
!     --------------------------------------
      INTEGER :: NUMBER_OF_GRID_POINTS
      INTEGER :: NUMBER_OF_TIME_STEPS_BEFORE_WRITE
      INTEGER :: START_FILE
      INTEGER :: END_FILE

      REAL :: RADIUS
      REAL :: GAMMA_FACTOR
      REAL :: CARRIER_FREQUENCY

!     Internal Variable and Array Declarations:
!     -----------------------------------------
      CHARACTER(80) :: BUFFER

      INTEGER :: CURRENT_GRID_POINT
      INTEGER :: CURRENT_FILE
      INTEGER :: LENGTH
      INTEGER :: INFO

      REAL :: ANGULAR_GRID_SPACING_SIZE
      REAL :: TIME_STEP_SIZE

      COMPLEX :: FOURIER_TRANSFORM

      COMPLEX, ALLOCATABLE, DIMENSION(:) :: WAVEFUNCTION

!     Input Variable Assignment Read from Command-line Arguments:
!     -----------------------------------------------------------
      CALL GET_COMMAND_ARGUMENT(1,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) NUMBER_OF_GRID_POINTS

      CALL GET_COMMAND_ARGUMENT(2,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) NUMBER_OF_TIME_STEPS_BEFORE_WRITE

      CALL GET_COMMAND_ARGUMENT(3,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) START_FILE

      CALL GET_COMMAND_ARGUMENT(4,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) END_FILE

      CALL GET_COMMAND_ARGUMENT(5,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) RADIUS

      CALL GET_COMMAND_ARGUMENT(6,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) GAMMA_FACTOR

      CALL GET_COMMAND_ARGUMENT(7,BUFFER,LENGTH,INFO)
      READ(BUFFER,*) CARRIER_FREQUENCY

      WRITE(6,*) NUMBER_OF_GRID_POINTS
      WRITE(6,*) NUMBER_OF_TIME_STEPS_BEFORE_WRITE
      WRITE(6,*) START_FILE
      WRITE(6,*) END_FILE
      WRITE(6,*) RADIUS
      WRITE(6,*) GAMMA_FACTOR
      WRITE(6,*) CARRIER_FREQUENCY


!     Internal Variable Assignment:
!     -----------------------------
      ANGULAR_GRID_SPACING_SIZE = 2.0E0*PI/FLOAT(NUMBER_OF_GRID_POINTS)
      TIME_STEP_SIZE = ((RADIUS*ANGULAR_GRID_SPACING_SIZE)**2/(2.0E0*GAMMA_FACTOR))*FLOAT(NUMBER_OF_TIME_STEPS_BEFORE_WRITE)

!     Allocate Arrays:
!     ----------------
      ALLOCATE(WAVEFUNCTION(NUMBER_OF_GRID_POINTS))

!     Main Program:
!     -------------
      DO CURRENT_FILE = START_FILE, END_FILE
         OPEN(UNIT=CURRENT_FILE,ACTION='READ',FORM='UNFORMATTED')
         READ(UNIT=CURRENT_FILE) WAVEFUNCTION
         CLOSE(UNIT=CURRENT_FILE)
         FOURIER_TRANSFORM = CMPLX(0.0E0,0.0E0)
         DO CURRENT_GRID_POINT = 1, NUMBER_OF_GRID_POINTS
            FOURIER_TRANSFORM = FOURIER_TRANSFORM+CMPLX(ABS(WAVEFUNCTION(CURRENT_GRID_POINT))**2*ANGULAR_GRID_SPACING_SIZE,0.0E0)*EXP(CMPLX(0.0E0,-CARRIER_FREQUENCY*FLOAT(CURRENT_GRID_POINT-1)*ANGULAR_GRID_SPACING_SIZE))
         ENDDO
         WRITE(500,900) FLOAT(CURRENT_FILE-START_FILE)*TIME_STEP_SIZE, ATAN2(AIMAG(FOURIER_TRANSFORM),REAL(FOURIER_TRANSFORM)), REAL(FOURIER_TRANSFORM), AIMAG(FOURIER_TRANSFORM)
      ENDDO

!     Format Statements:
!     ------------------
900   FORMAT(1X,4(F23.15))

!     Deallocate Arrays:
!     ------------------
      DEALLOCATE(WAVEFUNCTION)


      STOP
      ENDPROGRAM FTPSD
! ======================================================================
